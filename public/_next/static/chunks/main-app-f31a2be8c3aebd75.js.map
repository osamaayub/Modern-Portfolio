{"version":3,"file":"static/chunks/main-app-f31a2be8c3aebd75.js","mappings":"wbCAAA,QAAAC,OAAA,GAAAC,IAAA,CAAAC,EAAAC,CAAA,CAAAC,IAAA,CAAAF,EAAA,WAEAH,QAAAC,OAAA,GAAAC,IAAA,CAAAC,EAAAC,CAAA,CAAAC,IAAA,CAAAF,EAAA,WAEAH,QAAAC,OAAA,GAAAC,IAAA,CAAAC,EAAAC,CAAA,CAAAC,IAAA,CAAAF,EAAA,WAEAH,QAAAC,OAAA,GAAAC,IAAA,CAAAC,EAAAC,CAAA,CAAAC,IAAA,CAAAF,EAAA,WAEAH,QAAAC,OAAA,GAAAC,IAAA,CAAAC,EAAAC,CAAA,CAAAC,IAAA,CAAAF,EAAA,WAEAH,QAAAC,OAAA,GAAAC,IAAA,CAAAC,EAAAC,CAAA,CAAAC,IAAA,CAAAF,EAAA,oFCVIG,EAAkEC,MACtED,CAAAA,EAAiC,4BAA+B,CAAGE,KAAAA,EACnEF,EAAiC,cAAiB,CAAG,CAAC,GAAK,uBAAuB,EAClFA,EAAiC,gBAAmB,CAAGE,KAAAA,EACvDF,EAAiC,gCAAmC,CAAG,GAQvEG,EAAAA,EAAW,CAAC,CACVC,IAAK,kGAGLC,iBAAkB,EAGlBC,MAAO,GAEPC,yBAA0B,EAI1BC,yBAA0B,GAG1BC,aAAc,CACZN,EAAAA,CAAwB,CAAC,CAEvBO,YAAa,GACbC,cAAe,EACjB,GACAR,EAAAA,CAA0B,CAAC,CAEzBS,YAAa,MACf,GACD,AACH","sources":["webpack://_N_E/ignored|/home/usama/Desktop/portfolio/node_modules/next/dist/shared/lib/router|./utils/resolve-rewrites","webpack://_N_E/?2108","webpack://_N_E/./sentry.client.config.ts"],"sourcesContent":["/* (ignored) */","import(/* webpackMode: \"eager\" */ \"/home/usama/Desktop/portfolio/node_modules/next/dist/client/components/app-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/home/usama/Desktop/portfolio/node_modules/next/dist/client/components/client-page.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/home/usama/Desktop/portfolio/node_modules/next/dist/client/components/error-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/home/usama/Desktop/portfolio/node_modules/next/dist/client/components/layout-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/home/usama/Desktop/portfolio/node_modules/next/dist/client/components/not-found-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/home/usama/Desktop/portfolio/node_modules/next/dist/client/components/render-from-template-context.js\");\n","var _sentryCollisionFreeGlobalObject = typeof window != \"undefined\" ? window : typeof global != \"undefined\" ? global : typeof self != \"undefined\" ? self : {};\n_sentryCollisionFreeGlobalObject[\"__sentryRewritesTunnelPath__\"] = undefined;\n_sentryCollisionFreeGlobalObject[\"SENTRY_RELEASE\"] = {\"id\":\"pk1ebVhsuTr5fOiiHW5rr\"};\n_sentryCollisionFreeGlobalObject[\"__sentryBasePath\"] = undefined;\n_sentryCollisionFreeGlobalObject[\"__rewriteFramesAssetPrefixPath__\"] = \"\";\n\n// This file configures the initialization of Sentry on the client.\n// The config you add here will be used whenever a users loads a page in their browser.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n\nimport * as Sentry from \"@sentry/nextjs\";\n\nSentry.init({\n  dsn: 'https://26c1d455f876361277258759a23dbda0@o4507289262292992.ingest.us.sentry.io/4507289275072512',\n\n  // Adjust this value in production, or use tracesSampler for greater control\n  tracesSampleRate: 1,\n\n  // Setting this option to true will print useful information to the console while you're setting up Sentry.\n  debug: true,\n\n  replaysOnErrorSampleRate: 1.0,\n\n  // This sets the sample rate to be 10%. You may want this to be 100% while\n  // in development and sample at a lower rate in production\n  replaysSessionSampleRate: 0.1,\n\n  // You can remove this option if you're not planning to use the Sentry Session Replay feature:\n  integrations: [\n    Sentry.replayIntegration({\n      // Additional Replay configuration goes in here, for example:\n      maskAllText: true,\n      blockAllMedia: true,\n    }),\n    Sentry.feedbackIntegration({\n      // Additional SDK configuration goes in here, for example:\n      colorScheme: 'dark',\n    }),\n  ],\n});\n"],"names":["Promise","resolve","then","__webpack_require__","t","bind","_sentryCollisionFreeGlobalObject","window","undefined","Sentry","dsn","tracesSampleRate","debug","replaysOnErrorSampleRate","replaysSessionSampleRate","integrations","maskAllText","blockAllMedia","colorScheme"],"sourceRoot":""}